{
  "AdminHackathonResource": {
    "get": {
      "output": {
        "title": "response for create hackathon",
        "description": "will return information of the newly created hackathon",
        "type": "object",
        "properties": {
          "id": {
            "description": "unique identifier of this hackathon",
            "type": "integer"
          },
          "name": {
            "description": "unique name of the hackathon which is required in many restful requests(via http header)",
            "type": "string",
            "blank": true
          },
          "status": {
            "description": "the status of the hackathon. 0=init, 1=online, 2=offline. User can only view and join online hackathons which admin can view all status of hackathons",
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ]
          },
          "basic_info": {
            "description": "the basic configuration of this hackathon",
            "type": "object"
          },
          "extra_info": {
            "description": "the extra information that set by hackathon admins",
            "type": [
              "object"
            ],
            "blank": true
          },
          "create_time": {
            "description": "create time of the hackathon in total milliseconds",
            "type": "number"
          },
          "update_time": {
            "description": "latest update time of the hackathon in total milliseconds",
            "type": "any",
            "blank": true
          },
          "creator_id": {
            "description": "id of user who created the hackathon",
            "type": "integer"
          },
          "description": {
            "description": "the detailed description of the hackathon",
            "type": "any",
            "blank": true
          },
          "display_name": {
            "description": "display name of the hackathon which will showed on the  web pages",
            "type": "string"
          },
          "event_start_time": {
            "description": "the start time of the hackathon event in total milliseconds",
            "type": "number"
          },
          "event_end_time": {
            "description": "the end time of the hackathon event in total milliseconds",
            "type": "number"
          },
          "registration_start_time": {
            "description": "the start time when user can register in total milliseconds",
            "type": "number"
          },
          "registration_end_time": {
            "description": "the end time of user registration in total milliseconds",
            "type": "number"
          },
          "judge_start_time": {
            "description": "the start time for judges to view user's achievement in total milliseconds",
            "type": "number"
          },
          "judge_end_time": {
            "description": "the end time for judges to view user's achievement in total milliseconds",
            "type": "number"
          }
        }
      }
    },
    "post": {
      "input": {
        "title": "request to create a new hackathon",
        "description": "args to create new hackathon. Args that not listed here are NOT acceptable.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "description": "name of hackathon. Required and must be unique"
          },
          "display_name": {
            "type": "string",
            "maxLength": 64,
            "description": "the display name of hackathon which will be displayed in client website"
          },
          "type": {
            "type": "integer",
            "description": "the type of hackathon. Retained for future. 1 by default",
            "required": false
          },
          "description": {
            "type": "string",
            "description": "the detailed description of hackathon which will be displayed in hackathon detail page",
            "required": false
          },
          "event_start_time": {
            "format": "hack_date",
            "type": "string",
            "description": "the start time of the hackathon event. Should be in time format that python accepts"
          },
          "event_end_time": {
            "format": "hack_date",
            "type": "string",
            "description": "the end time of the hackathon event. Should be in time format that python accepts"
          },
          "registration_start_time": {
            "format": "hack_date",
            "type": "string",
            "description": "the start time for user registration. Should be in time format that python accepts"
          },
          "registration_end_time": {
            "format": "hack_date",
            "type": "string",
            "description": "the end time for user registration. Should be in time format that python accepts"
          },
          "judge_start_time": {
            "type": "string",
            "format": "hack_date",
            "description": "the start time for judging. Should be in time format that python accepts"
          },
          "judge_end_time": {
            "type": "string",
            "format": "hack_date",
            "description": "the end time for judging. Should be in time format that python accepts"
          },
          "extra_info": {
            "description": "the extra info for the hackathon. should be in JSON format if any. Server side will neither check its format nor read anything from it",
            "type": [
              "null",
              "object"
            ],
            "required": false,
            "blank": true
          }
        }
      },
      "output": {
        "title": "response for create hackathon",
        "description": "will return information of the newly created hackathon",
        "type": "object",
        "properties": {
          "id": {
            "description": "unique identifier of this hackathon",
            "type": "integer"
          },
          "name": {
            "description": "unique name of the hackathon which is required in many restful requests(via http header)",
            "type": "string"
          },
          "status": {
            "description": "the status of the hackathon. 0=init, 1=online, 2=offline. User can only view and join online hackathons which admin can view all status of hackathons",
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ]
          },
          "basic_info": {
            "description": "the basic configuration of this hackathon",
            "type": "object"
          },
          "extra_info": {
            "description": "the extra information that set by hackathon admins",
            "type": [
              "object"
            ],
            "blank": true
          },
          "create_time": {
            "description": "create time of the hackathon in total milliseconds",
            "type": "number"
          },
          "update_time": {
            "description": "latest update time of the hackathon in total milliseconds",
            "type": "any",
            "blank": true
          },
          "creator_id": {
            "description": "id of user who created the hackathon",
            "type": "integer"
          },
          "description": {
            "description": "the detailed description of the hackathon",
            "type": "any",
            "blank": true
          },
          "display_name": {
            "description": "display name of the hackathon which will showed on the  web pages",
            "type": "string"
          },
          "event_start_time": {
            "description": "the start time of the hackathon event in total milliseconds",
            "type": "number"
          },
          "event_end_time": {
            "description": "the end time of the hackathon event in total milliseconds",
            "type": "number"
          },
          "registration_start_time": {
            "description": "the start time when user can register in total milliseconds",
            "type": "number"
          },
          "registration_end_time": {
            "description": "the end time of user registration in total milliseconds",
            "type": "number"
          },
          "judge_start_time": {
            "description": "the start time for judges to view user's achievement in total milliseconds",
            "type": "number"
          },
          "judge_end_time": {
            "description": "the end time for judges to view user's achievement in total milliseconds",
            "type": "number"
          }
        }
      }
    },
    "put": {
      "input": {
        "title": "request to update an existed hackathon",
        "description": "Both name and id of hackathon are required",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "description": "name of hackathon. Required and must be unique"
          },
          "display_name": {
            "type": "string",
            "maxLength": 64,
            "description": "the display name of hackathon which will be displayed in client website",
            "required": false
          },
          "type": {
            "type": "integer",
            "description": "the type of hackathon. Retained for future. 1 by default",
            "required": false
          },
          "description": {
            "type": "string",
            "description": "the detailed description of hackathon which will be displayed in hackathon detail page",
            "required": false
          },
          "event_start_time": {
            "format": "hack_date",
            "type": "string",
            "description": "the start time of the hackathon event. Should be in time format that python accepts",
            "required": false
          },
          "event_end_time": {
            "format": "hack_date",
            "type": "string",
            "description": "the end time of the hackathon event. Should be in time format that python accepts",
            "required": false
          },
          "registration_start_time": {
            "format": "hack_date",
            "type": "string",
            "description": "the start time for user registration. Should be in time format that python accepts",
            "required": false
          },
          "registration_end_time": {
            "format": "hack_date",
            "type": "string",
            "description": "the end time for user registration. Should be in time format that python accepts",
            "required": false
          },
          "judge_start_time": {
            "type": "string",
            "format": "hack_date",
            "description": "the start time for judging. Should be in time format that python accepts",
            "required": false
          },
          "judge_end_time": {
            "type": "string",
            "format": "hack_date",
            "description": "the end time for judging. Should be in time format that python accepts",
            "required": false
          },
          "basic_info": {
            "description": "the basic info for the hackathon. should be in JSON format.",
            "type": "object",
            "required": false
          },
          "extra_info": {
            "description": "the extra info for the hackathon. should be in JSON format if any. Server side will neither check its format nor read anything from it",
            "type": "any",
            "required": false,
            "blank": true
          }
        }
      },
      "output": {
        "title": "response to update hackathon",
        "description": "will return information of the newly created hackathon",
        "type": "object",
        "properties": {
          "status": {
            "description": "the status of the hackathon. 0=init, 1=online, 2=offline. User can only view and join online hackathons which admin can view all status of hackathons",
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ]
          },
          "basic_info": {
            "description": "the basic configuration of this hackathon",
            "type": "object"
          },
          "extra_info": {
            "description": "the extra information that set by hackathon admins",
            "type": [
              "object"
            ],
            "blank": true
          },
          "create_time": {
            "description": "create time of the hackathon in total milliseconds",
            "type": "number"
          },
          "update_time": {
            "description": "latest update time of the hackathon in total milliseconds",
            "type": "any",
            "blank": true
          },
          "creator_id": {
            "description": "id of user who created the hackathon",
            "type": "integer"
          },
          "description": {
            "description": "the detailed description of the hackathon",
            "type": "any",
            "blank": true
          },
          "display_name": {
            "description": "display name of the hackathon which will showed on the  web pages",
            "type": "string"
          },
          "event_start_time": {
            "description": "the start time of the hackathon event in total milliseconds",
            "type": "number"
          },
          "event_end_time": {
            "description": "the end time of the hackathon event in total milliseconds",
            "type": "number"
          },
          "registration_start_time": {
            "description": "the start time when user can register in total milliseconds",
            "type": "number"
          },
          "registration_end_time": {
            "description": "the end time of user registration in total milliseconds",
            "type": "number"
          },
          "judge_start_time": {
            "description": "the start time for judges to view user's achievement in total milliseconds",
            "type": "number"
          },
          "judge_end_time": {
            "description": "the end time for judges to view user's achievement in total milliseconds",
            "type": "number"
          }
        }
      }
    }
  }
}
